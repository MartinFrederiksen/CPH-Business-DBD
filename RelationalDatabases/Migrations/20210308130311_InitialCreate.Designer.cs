// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RelationalDatabases.Persistence;

namespace RelationalDatabases.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210308130311_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("RelationalDatabases.DataModels.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("cityId")
                        .HasColumnType("bigint");

                    b.Property<string>("housenumber")
                        .HasColumnType("text");

                    b.Property<string>("street")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("cityId");

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("RelationalDatabases.DataModels.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<int>("zip")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("cities");
                });

            modelBuilder.Entity("RelationalDatabases.DataModels.Address", b =>
                {
                    b.HasOne("RelationalDatabases.DataModels.City", "city")
                        .WithMany("addresses")
                        .HasForeignKey("cityId");

                    b.Navigation("city");
                });

            modelBuilder.Entity("RelationalDatabases.DataModels.City", b =>
                {
                    b.Navigation("addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
